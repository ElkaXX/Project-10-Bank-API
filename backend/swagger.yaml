swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions:
    get:
      tags:
        - Transactions Module
      summary: Get all user transactions for the current month
      description: Returns all transactions for the current month, grouped by account.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          name: userId
          description: ID of the user to retrieve transactions for
          required: true
          type: string
        - in: query
          name: month
          description: The month to filter transactions, defaults to the current month
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: A list of transactions grouped by account
          schema:
            type: object
            properties:
              accountId:
                type: string
              accountName:
                type: string
              transactions:
                type: array
                items:
                  $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "404":
          description: User not found
        "500":
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Get details of a specific transaction
      description: Retrieves detailed information about a specific transaction by its ID.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to retrieve
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

    put:
      tags:
        - Transactions Module
      summary: Update a transaction
      description: Modify an existing transaction.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction data
          required: true
          schema:
            $ref: "#/definitions/TransactionInput"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction successfully updated
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

    delete:
      tags:
        - Transactions Module
      summary: Delete a transaction
      description: Deletes an existing transaction by ID.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: Transaction successfully deleted
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: string
        example: "5f8d0d55b54764421b7156b8"
      accountId:
        type: string
        example: "12345"
      amount:
        type: number
        format: float
        example: 100.5
      currency:
        type: string
        example: "USD"
      description:
        type: string
        example: "Grocery shopping"
      date:
        type: string
        format: date-time
        example: "2024-10-06T13:45:30Z"

  TransactionInput:
    type: object
    properties:
      accountId:
        type: string
        example: "12345"
      amount:
        type: number
        format: float
        example: 100.5
      currency:
        type: string
        example: "USD"
      description:
        type: string
        example: "Grocery shopping"
      date:
        type: string
        format: date-time
        example: "2024-10-06T13:45:30Z"
